name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/my-image:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to EC2
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        EC2_INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}
        DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/my-image:latest

      run: |
        sudo apt-get update
        sudo apt-get install -y awscli

        # Connect to EC2 and deploy Docker image
        aws ec2-instance-connect send-ssh-public-key \
          --instance-id $EC2_INSTANCE_ID \
          --availability-zone $AWS_REGIONa \
          --instance-os-user ec2-user \
          --ssh-public-key file://~/.ssh/id_rsa.pub

        ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_INSTANCE_IP }} << 'EOF'
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker pull $DOCKER_IMAGE
          docker stop my-container || true
          docker rm my-container || true
          docker run -d --name my-container -p 80:3000 $DOCKER_IMAGE
        EOF
